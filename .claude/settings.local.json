{
  "permissions": {
    "allow": [
      "mcp__hugging-face__hf_whoami",
      "mcp__hugging-face__model_search",
      "mcp__hugging-face__hf_doc_search",
      "mcp__ide__getDiagnostics",
      "mcp__ide__executeCode",
      "Bash(compgen:*)",
      "Bash(declare -F)",
      "Bash(awk:*)",
      "Bash(xxd:*)",
      "Read(//home/enzo/.claude/**)",
      "Read(//home/enzo/**)",
      "Bash(chmod:*)",
      "Bash(/mcp)",
      "Bash(pip3:*)",
      "Bash(python3 -m pip:*)",
      "Bash(sudo apt:*)",
      "Bash(sudo apt install:*)",
      "Bash(curl:*)",
      "Bash(python3:*)",
      "Bash(source:*)",
      "Bash(pip install:*)",
      "Bash(npm install:*)",
      "Bash(npm search:*)",
      "Bash(grep:*)",
      "Bash(npx @modelcontextprotocol/server-filesystem:*)",
      "Bash(npx:*)",
      "Bash(export:*)",
      "Bash(pip search:*)",
      "Bash(git clone:*)",
      "Bash(unzip:*)",
      "Bash(/home/enzo/.local/mcp-servers/git-server/bin/python -m mcp_server_git --help)",
      "Bash(/home/enzo/.local/mcp-servers/fetch-server/bin/python -m mcp_server_fetch --help)",
      "Bash(/home/enzo/.local/mcp-servers/time-server/bin/python -m mcp_server_time --help)",
      "Bash(/home/enzo/.local/mcp-servers/git-server/bin/python -c \"import mcp_server_git; print(''Git MCP server imported successfully'')\")",
      "Bash(/home/enzo/.local/mcp-servers/fetch-server/bin/python -c \"import mcp_server_fetch; print(''Fetch MCP server imported successfully'')\")",
      "Bash(/home/enzo/.local/mcp-servers/time-server/bin/python -c \"import mcp_server_time; print(''Time MCP server imported successfully'')\")",
      "Bash(./.claude/scripts/validate-hrms-mcp.sh:*)",
      "Bash(./docs/scripts/health-check.sh:*)",
      "WebSearch",
      "Bash(claude --version)",
      "mcp__project-filesystem__list_directory",
      "mcp__project-filesystem__read_text_file",
      "mcp__project-filesystem__read_multiple_files",
      "mcp__memory__create_entities",
      "mcp__memory__create_relations",
      "mcp__git__git_status",
      "mcp__git__git_diff_unstaged",
      "mcp__git__git_add",
      "mcp__git__git_commit",
      "Bash(git push:*)",
      "Bash(for pkg in \"@modelcontextprotocol/server-filesystem\" \"@modelcontextprotocol/server-memory\" \"@modelcontextprotocol/server-sequentialthinking\" \"@modelcontextprotocol/server-everything\" \"@testsprite/testsprite-mcp\")",
      "Bash(do echo -n \"  $pkg: \")",
      "Bash(done)",
      "mcp__fetch__fetch",
      "mcp__time__get_current_time",
      "mcp__time__convert_time",
      "Bash(npm view:*)",
      "Bash(npm info:*)",
      "mcp__sequential-thinking__*",
      "mcp__everything__*",
      "mcp__playwright__*",
      "mcp__shadcn-ui__*",
      "mcp__context7__*",
      "mcp__postgres__*",
      "mcp__sqlite__*",
      "mcp__docker__*",
      "mcp__kubernetes__*",
      "mcp__TestSprite__*",
      "mcp__vercel-api__*",
      "mcp__notion-api__*",
      "Bash(PORT=3001 npm start)",
      "Bash(node server.js)",
      "Bash(node:*)",
      "Bash(lsof:*)",
      "Bash(kill:*)",
      "mcp__playwright__browser_navigate",
      "mcp__shadcn-ui__list_components",
      "mcp__shadcn-ui__get_component",
      "Bash(sudo dpkg:*)",
      "Bash(sudo apt-get install:*)",
      "Bash(pkill:*)",
      "Bash(killall:*)",
      "mcp__postgres__pg_execute_query",
      "Bash(PGPASSWORD=hrms_password psql -h 127.0.0.1 -U hrms_user -d ai_hrms_2025 -c \"\nSELECT \n    t.tenant_id,\n    t.tenant_name,\n    t.tenant_slug,\n    t.subscription_plan as tenant_plan,\n    t.subscription_status as tenant_status,\n    t.max_organizations,\n    t.max_users_per_org,\n    t.timezone as tenant_timezone,\n    t.currency as tenant_currency,\n    t.is_active as tenant_active,\n    COUNT(o.organization_id) as total_organizations\nFROM tenants t\nLEFT JOIN organizations o ON t.tenant_id = o.tenant_id\nGROUP BY t.tenant_id, t.tenant_name, t.tenant_slug, t.subscription_plan, t.subscription_status, \n         t.max_organizations, t.max_users_per_org, t.timezone, t.currency, t.is_active\nORDER BY t.tenant_name;\n\")",
      "Bash(PGPASSWORD=hrms_password psql:*)",
      "mcp__postgres__pg_execute_sql",
      "mcp__filesystem__list_directory",
      "Bash(PGPASSWORD:*)",
      "Bash(/home/enzo/AI-HRMS-2025/export_clean.sh:*)",
      "Bash(sed:*)",
      "Bash(PGPASSWORD=hrms_password createdb -h 127.0.0.1 -p 5432 -U hrms_user ai_hrms_2025)",
      "Bash(psql:*)",
      "Bash(for migration in
      "Bash(xargs:*)",
      "Bash(while read file)",
      "Bash(do basename \"$file\")",
      "Bash(while read name)",
      "Bash(do psql:*)",
      "Bash(tee:*)",
      "Bash(git checkout:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(while read model)",
      "Bash(do if ! git log --all --oneline)",
      "Bash(for:*)",
      "Bash(do)"
    ],
    "deny": [],
    "ask": []
  },
  "enabledMcpjsonServers": [
    "filesystem",
    "memory",
    "sequential-thinking",
    "everything",
    "playwright",
    "shadcn-ui",
    "context7",
    "postgres",
    "sqlite",
    "docker",
    "kubernetes",
    "git",
    "fetch",
    "time",
    "TestSprite",
    "vercel-api",
    "notion-api"
  ]
}